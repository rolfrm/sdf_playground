OPT = -g3 -O0
LIB_SOURCES1 = gradient.c

LIB_SOURCES = $(addprefix src/, $(LIB_SOURCES1))
CC = gcc
TARGET = run.exe
LIB_OBJECTS =$(LIB_SOURCES:.c=.o)
LDFLAGS= -L. $(OPT) # -Wl,--gc-sections -Wl,-s -fdata-sections -ffunction-sections
LIBS= iron/libiron.a -lm -licydb -lX11 -lglfw -lGL -lpng
ALL= $(TARGET)
CFLAGS = -Isrc/ -I. -Ilibicydb/include -Iinclude/ -std=gnu11 -c $(OPT) -Werror=implicit-function-declaration -Wformat=0 -D_GNU_SOURCE -fdiagnostics-color  -Wwrite-strings -Werror=uninitialized -DUSE_VALGRIND -DDEBUG -Wall

$(TARGET): $(LIB_OBJECTS) libicydb.so libiron.so
	$(CC) $(LDFLAGS) $(LIB_OBJECTS) $(LIBS) -o $@

libicydb.so:
	make -C libicydb
	cp libicydb/libicydb.so .

libiron.so: iron/libiron.so
	make -C iron
	cp iron/libiron.so .

all: $(ALL)

.c.o: $(HEADERS) $(LEVEL_CS)
	$(CC) $(CFLAGS) $< -o $@ -MMD -MF $@.depends

depend: h-depend
clean:
	rm -f $(LIB_OBJECTS) $(ALL) src/*.o.depends src/*.o src/level*.c src/*.shader.c 
.PHONY: test
test: $(TARGET)
	make -f makefile.compiler
	make -f makefile.test test

-include $(LIB_OBJECTS:.o=.o.depends)


